# Thanks to the Lifecycle Policy in the CloudFormation template the untagged images
#  (except for the latest untagged version) will expire within 24 hours
name: Create ECR repo, build and push the image
on:
  workflow_dispatch:
    inputs:
      region:
        description: 'AWS Region'
        required: true
        default: 'us-east-1'
      ecr-repository:
        description: 'AWS ECR Repository Name'
        required: true
        default: 'crypto-prices-etl'
      cloudformation-ecr-stack:
        description: 'CloudFormation Stack Name'
        required: true
        default: 'prefect-crypto-prices-etl-ecr'
jobs:
  ecr-deploy:
    name: Create ECR repo, build and push the image
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region}}
      - name: Create new ECR repository using AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ github.event.inputs.cloudformation-ecr-stack }}
          template: create_ecr_repository.yml
          parameter-overrides: "RepositoryName=${{ github.event.inputs.ecr-repository }}"
          no-fail-on-empty-changeset: "1"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ github.event.inputs.ecr-repository }}
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG